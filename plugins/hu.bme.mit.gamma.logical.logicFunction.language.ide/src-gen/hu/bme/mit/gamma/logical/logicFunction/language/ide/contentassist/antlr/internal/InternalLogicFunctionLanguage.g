/*
 * generated by Xtext 2.17.0
 */
grammar InternalLogicFunctionLanguage;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package hu.bme.mit.gamma.logical.logicFunction.language.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package hu.bme.mit.gamma.logical.logicFunction.language.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import hu.bme.mit.gamma.logical.logicFunction.language.services.LogicFunctionLanguageGrammarAccess;

}
@parser::members {
	private LogicFunctionLanguageGrammarAccess grammarAccess;

	public void setGrammarAccess(LogicFunctionLanguageGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleLogicFunctionDiagram
entryRuleLogicFunctionDiagram
:
{ before(grammarAccess.getLogicFunctionDiagramRule()); }
	 ruleLogicFunctionDiagram
{ after(grammarAccess.getLogicFunctionDiagramRule()); } 
	 EOF 
;

// Rule LogicFunctionDiagram
ruleLogicFunctionDiagram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicFunctionDiagramAccess().getGroup()); }
		(rule__LogicFunctionDiagram__Group__0)
		{ after(grammarAccess.getLogicFunctionDiagramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRuleDeclaration
entryRuleRuleDeclaration
:
{ before(grammarAccess.getRuleDeclarationRule()); }
	 ruleRuleDeclaration
{ after(grammarAccess.getRuleDeclarationRule()); } 
	 EOF 
;

// Rule RuleDeclaration
ruleRuleDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleDeclarationAccess().getGroup()); }
		(rule__RuleDeclaration__Group__0)
		{ after(grammarAccess.getRuleDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAND
entryRuleAND
:
{ before(grammarAccess.getANDRule()); }
	 ruleAND
{ after(grammarAccess.getANDRule()); } 
	 EOF 
;

// Rule AND
ruleAND 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getANDAccess().getGroup()); }
		(rule__AND__Group__0)
		{ after(grammarAccess.getANDAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOR
entryRuleOR
:
{ before(grammarAccess.getORRule()); }
	 ruleOR
{ after(grammarAccess.getORRule()); } 
	 EOF 
;

// Rule OR
ruleOR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getORAccess().getGroup()); }
		(rule__OR__Group__0)
		{ after(grammarAccess.getORAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXOR
entryRuleXOR
:
{ before(grammarAccess.getXORRule()); }
	 ruleXOR
{ after(grammarAccess.getXORRule()); } 
	 EOF 
;

// Rule XOR
ruleXOR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXORAccess().getGroup()); }
		(rule__XOR__Group__0)
		{ after(grammarAccess.getXORAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNOT
entryRuleNOT
:
{ before(grammarAccess.getNOTRule()); }
	 ruleNOT
{ after(grammarAccess.getNOTRule()); } 
	 EOF 
;

// Rule NOT
ruleNOT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNOTAccess().getGroup()); }
		(rule__NOT__Group__0)
		{ after(grammarAccess.getNOTAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePredicateListen
entryRulePredicateListen
:
{ before(grammarAccess.getPredicateListenRule()); }
	 rulePredicateListen
{ after(grammarAccess.getPredicateListenRule()); } 
	 EOF 
;

// Rule PredicateListen
rulePredicateListen 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredicateListenAccess().getListensAssignment()); }
		(rule__PredicateListen__ListensAssignment)
		{ after(grammarAccess.getPredicateListenAccess().getListensAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRuleListen
entryRuleRuleListen
:
{ before(grammarAccess.getRuleListenRule()); }
	 ruleRuleListen
{ after(grammarAccess.getRuleListenRule()); } 
	 EOF 
;

// Rule RuleListen
ruleRuleListen 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleListenAccess().getListensAssignment()); }
		(rule__RuleListen__ListensAssignment)
		{ after(grammarAccess.getRuleListenAccess().getListensAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterface
entryRuleInterface
:
{ before(grammarAccess.getInterfaceRule()); }
	 ruleInterface
{ after(grammarAccess.getInterfaceRule()); } 
	 EOF 
;

// Rule Interface
ruleInterface 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfaceAccess().getGroup()); }
		(rule__Interface__Group__0)
		{ after(grammarAccess.getInterfaceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEventDeclaration
entryRuleEventDeclaration
:
{ before(grammarAccess.getEventDeclarationRule()); }
	 ruleEventDeclaration
{ after(grammarAccess.getEventDeclarationRule()); } 
	 EOF 
;

// Rule EventDeclaration
ruleEventDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventDeclarationAccess().getGroup()); }
		(rule__EventDeclaration__Group__0)
		{ after(grammarAccess.getEventDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePredicate
entryRulePredicate
:
{ before(grammarAccess.getPredicateRule()); }
	 rulePredicate
{ after(grammarAccess.getPredicateRule()); } 
	 EOF 
;

// Rule Predicate
rulePredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredicateAccess().getGroup()); }
		(rule__Predicate__Group__0)
		{ after(grammarAccess.getPredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule EventDirection
ruleEventDirection
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventDirectionAccess().getAlternatives()); }
		(rule__EventDirection__Alternatives)
		{ after(grammarAccess.getEventDirectionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ValueType
ruleValueType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueTypeAccess().getINTEGEREnumLiteralDeclaration()); }
		('int')
		{ after(grammarAccess.getValueTypeAccess().getINTEGEREnumLiteralDeclaration()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicFunctionDiagram__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicFunctionDiagramAccess().getRuleAssignment_3_0()); }
		(rule__LogicFunctionDiagram__RuleAssignment_3_0)
		{ after(grammarAccess.getLogicFunctionDiagramAccess().getRuleAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicFunctionDiagramAccess().getInterfacesAssignment_3_1()); }
		(rule__LogicFunctionDiagram__InterfacesAssignment_3_1)
		{ after(grammarAccess.getLogicFunctionDiagramAccess().getInterfacesAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleDeclarationAccess().getExpressionAssignment_4_0()); }
		(rule__RuleDeclaration__ExpressionAssignment_4_0)
		{ after(grammarAccess.getRuleDeclarationAccess().getExpressionAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getRuleDeclarationAccess().getExpressionAssignment_4_1()); }
		(rule__RuleDeclaration__ExpressionAssignment_4_1)
		{ after(grammarAccess.getRuleDeclarationAccess().getExpressionAssignment_4_1()); }
	)
	|
	(
		{ before(grammarAccess.getRuleDeclarationAccess().getExpressionAssignment_4_2()); }
		(rule__RuleDeclaration__ExpressionAssignment_4_2)
		{ after(grammarAccess.getRuleDeclarationAccess().getExpressionAssignment_4_2()); }
	)
	|
	(
		{ before(grammarAccess.getRuleDeclarationAccess().getExpressionAssignment_4_3()); }
		(rule__RuleDeclaration__ExpressionAssignment_4_3)
		{ after(grammarAccess.getRuleDeclarationAccess().getExpressionAssignment_4_3()); }
	)
	|
	(
		{ before(grammarAccess.getRuleDeclarationAccess().getExpressionAssignment_4_4()); }
		(rule__RuleDeclaration__ExpressionAssignment_4_4)
		{ after(grammarAccess.getRuleDeclarationAccess().getExpressionAssignment_4_4()); }
	)
	|
	(
		{ before(grammarAccess.getRuleDeclarationAccess().getExpressionAssignment_4_5()); }
		(rule__RuleDeclaration__ExpressionAssignment_4_5)
		{ after(grammarAccess.getRuleDeclarationAccess().getExpressionAssignment_4_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getANDAccess().getArgumentsAssignment_2_0()); }
		(rule__AND__ArgumentsAssignment_2_0)
		{ after(grammarAccess.getANDAccess().getArgumentsAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getANDAccess().getArgumentsAssignment_2_1()); }
		(rule__AND__ArgumentsAssignment_2_1)
		{ after(grammarAccess.getANDAccess().getArgumentsAssignment_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getANDAccess().getArgumentsAssignment_2_2()); }
		(rule__AND__ArgumentsAssignment_2_2)
		{ after(grammarAccess.getANDAccess().getArgumentsAssignment_2_2()); }
	)
	|
	(
		{ before(grammarAccess.getANDAccess().getArgumentsAssignment_2_3()); }
		(rule__AND__ArgumentsAssignment_2_3)
		{ after(grammarAccess.getANDAccess().getArgumentsAssignment_2_3()); }
	)
	|
	(
		{ before(grammarAccess.getANDAccess().getArgumentsAssignment_2_4()); }
		(rule__AND__ArgumentsAssignment_2_4)
		{ after(grammarAccess.getANDAccess().getArgumentsAssignment_2_4()); }
	)
	|
	(
		{ before(grammarAccess.getANDAccess().getArgumentsAssignment_2_5()); }
		(rule__AND__ArgumentsAssignment_2_5)
		{ after(grammarAccess.getANDAccess().getArgumentsAssignment_2_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Alternatives_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getANDAccess().getArgumentsAssignment_3_1_0()); }
		(rule__AND__ArgumentsAssignment_3_1_0)
		{ after(grammarAccess.getANDAccess().getArgumentsAssignment_3_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getANDAccess().getArgumentsAssignment_3_1_1()); }
		(rule__AND__ArgumentsAssignment_3_1_1)
		{ after(grammarAccess.getANDAccess().getArgumentsAssignment_3_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getANDAccess().getArgumentsAssignment_3_1_2()); }
		(rule__AND__ArgumentsAssignment_3_1_2)
		{ after(grammarAccess.getANDAccess().getArgumentsAssignment_3_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getANDAccess().getArgumentsAssignment_3_1_3()); }
		(rule__AND__ArgumentsAssignment_3_1_3)
		{ after(grammarAccess.getANDAccess().getArgumentsAssignment_3_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getANDAccess().getArgumentsAssignment_3_1_4()); }
		(rule__AND__ArgumentsAssignment_3_1_4)
		{ after(grammarAccess.getANDAccess().getArgumentsAssignment_3_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getANDAccess().getArgumentsAssignment_3_1_5()); }
		(rule__AND__ArgumentsAssignment_3_1_5)
		{ after(grammarAccess.getANDAccess().getArgumentsAssignment_3_1_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getORAccess().getArgumentsAssignment_2_0()); }
		(rule__OR__ArgumentsAssignment_2_0)
		{ after(grammarAccess.getORAccess().getArgumentsAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getORAccess().getArgumentsAssignment_2_1()); }
		(rule__OR__ArgumentsAssignment_2_1)
		{ after(grammarAccess.getORAccess().getArgumentsAssignment_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getORAccess().getArgumentsAssignment_2_2()); }
		(rule__OR__ArgumentsAssignment_2_2)
		{ after(grammarAccess.getORAccess().getArgumentsAssignment_2_2()); }
	)
	|
	(
		{ before(grammarAccess.getORAccess().getArgumentsAssignment_2_3()); }
		(rule__OR__ArgumentsAssignment_2_3)
		{ after(grammarAccess.getORAccess().getArgumentsAssignment_2_3()); }
	)
	|
	(
		{ before(grammarAccess.getORAccess().getArgumentsAssignment_2_4()); }
		(rule__OR__ArgumentsAssignment_2_4)
		{ after(grammarAccess.getORAccess().getArgumentsAssignment_2_4()); }
	)
	|
	(
		{ before(grammarAccess.getORAccess().getArgumentsAssignment_2_5()); }
		(rule__OR__ArgumentsAssignment_2_5)
		{ after(grammarAccess.getORAccess().getArgumentsAssignment_2_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__Alternatives_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getORAccess().getArgumentsAssignment_3_1_0()); }
		(rule__OR__ArgumentsAssignment_3_1_0)
		{ after(grammarAccess.getORAccess().getArgumentsAssignment_3_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getORAccess().getArgumentsAssignment_3_1_1()); }
		(rule__OR__ArgumentsAssignment_3_1_1)
		{ after(grammarAccess.getORAccess().getArgumentsAssignment_3_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getORAccess().getArgumentsAssignment_3_1_2()); }
		(rule__OR__ArgumentsAssignment_3_1_2)
		{ after(grammarAccess.getORAccess().getArgumentsAssignment_3_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getORAccess().getArgumentsAssignment_3_1_3()); }
		(rule__OR__ArgumentsAssignment_3_1_3)
		{ after(grammarAccess.getORAccess().getArgumentsAssignment_3_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getORAccess().getArgumentsAssignment_3_1_4()); }
		(rule__OR__ArgumentsAssignment_3_1_4)
		{ after(grammarAccess.getORAccess().getArgumentsAssignment_3_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getORAccess().getArgumentsAssignment_3_1_5()); }
		(rule__OR__ArgumentsAssignment_3_1_5)
		{ after(grammarAccess.getORAccess().getArgumentsAssignment_3_1_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XOR__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXORAccess().getArgumentsAssignment_2_0()); }
		(rule__XOR__ArgumentsAssignment_2_0)
		{ after(grammarAccess.getXORAccess().getArgumentsAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getXORAccess().getArgumentsAssignment_2_1()); }
		(rule__XOR__ArgumentsAssignment_2_1)
		{ after(grammarAccess.getXORAccess().getArgumentsAssignment_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getXORAccess().getArgumentsAssignment_2_2()); }
		(rule__XOR__ArgumentsAssignment_2_2)
		{ after(grammarAccess.getXORAccess().getArgumentsAssignment_2_2()); }
	)
	|
	(
		{ before(grammarAccess.getXORAccess().getArgumentsAssignment_2_3()); }
		(rule__XOR__ArgumentsAssignment_2_3)
		{ after(grammarAccess.getXORAccess().getArgumentsAssignment_2_3()); }
	)
	|
	(
		{ before(grammarAccess.getXORAccess().getArgumentsAssignment_2_4()); }
		(rule__XOR__ArgumentsAssignment_2_4)
		{ after(grammarAccess.getXORAccess().getArgumentsAssignment_2_4()); }
	)
	|
	(
		{ before(grammarAccess.getXORAccess().getArgumentsAssignment_2_5()); }
		(rule__XOR__ArgumentsAssignment_2_5)
		{ after(grammarAccess.getXORAccess().getArgumentsAssignment_2_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XOR__Alternatives_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXORAccess().getArgumentsAssignment_3_1_0()); }
		(rule__XOR__ArgumentsAssignment_3_1_0)
		{ after(grammarAccess.getXORAccess().getArgumentsAssignment_3_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getXORAccess().getArgumentsAssignment_3_1_1()); }
		(rule__XOR__ArgumentsAssignment_3_1_1)
		{ after(grammarAccess.getXORAccess().getArgumentsAssignment_3_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getXORAccess().getArgumentsAssignment_3_1_2()); }
		(rule__XOR__ArgumentsAssignment_3_1_2)
		{ after(grammarAccess.getXORAccess().getArgumentsAssignment_3_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getXORAccess().getArgumentsAssignment_3_1_3()); }
		(rule__XOR__ArgumentsAssignment_3_1_3)
		{ after(grammarAccess.getXORAccess().getArgumentsAssignment_3_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getXORAccess().getArgumentsAssignment_3_1_4()); }
		(rule__XOR__ArgumentsAssignment_3_1_4)
		{ after(grammarAccess.getXORAccess().getArgumentsAssignment_3_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getXORAccess().getArgumentsAssignment_3_1_5()); }
		(rule__XOR__ArgumentsAssignment_3_1_5)
		{ after(grammarAccess.getXORAccess().getArgumentsAssignment_3_1_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NOT__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNOTAccess().getArgumentAssignment_2_0()); }
		(rule__NOT__ArgumentAssignment_2_0)
		{ after(grammarAccess.getNOTAccess().getArgumentAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getNOTAccess().getArgumentAssignment_2_1()); }
		(rule__NOT__ArgumentAssignment_2_1)
		{ after(grammarAccess.getNOTAccess().getArgumentAssignment_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getNOTAccess().getArgumentAssignment_2_2()); }
		(rule__NOT__ArgumentAssignment_2_2)
		{ after(grammarAccess.getNOTAccess().getArgumentAssignment_2_2()); }
	)
	|
	(
		{ before(grammarAccess.getNOTAccess().getArgumentAssignment_2_3()); }
		(rule__NOT__ArgumentAssignment_2_3)
		{ after(grammarAccess.getNOTAccess().getArgumentAssignment_2_3()); }
	)
	|
	(
		{ before(grammarAccess.getNOTAccess().getArgumentAssignment_2_4()); }
		(rule__NOT__ArgumentAssignment_2_4)
		{ after(grammarAccess.getNOTAccess().getArgumentAssignment_2_4()); }
	)
	|
	(
		{ before(grammarAccess.getNOTAccess().getArgumentAssignment_2_5()); }
		(rule__NOT__ArgumentAssignment_2_5)
		{ after(grammarAccess.getNOTAccess().getArgumentAssignment_2_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDirection__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventDirectionAccess().getINEnumLiteralDeclaration_0()); }
		('in')
		{ after(grammarAccess.getEventDirectionAccess().getINEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getEventDirectionAccess().getOUTEnumLiteralDeclaration_1()); }
		('out')
		{ after(grammarAccess.getEventDirectionAccess().getOUTEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicFunctionDiagram__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicFunctionDiagram__Group__0__Impl
	rule__LogicFunctionDiagram__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicFunctionDiagram__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicFunctionDiagramAccess().getFunctionKeyword_0()); }
	'function'
	{ after(grammarAccess.getLogicFunctionDiagramAccess().getFunctionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicFunctionDiagram__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicFunctionDiagram__Group__1__Impl
	rule__LogicFunctionDiagram__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicFunctionDiagram__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicFunctionDiagramAccess().getNameAssignment_1()); }
	(rule__LogicFunctionDiagram__NameAssignment_1)
	{ after(grammarAccess.getLogicFunctionDiagramAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicFunctionDiagram__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicFunctionDiagram__Group__2__Impl
	rule__LogicFunctionDiagram__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicFunctionDiagram__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicFunctionDiagramAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getLogicFunctionDiagramAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicFunctionDiagram__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicFunctionDiagram__Group__3__Impl
	rule__LogicFunctionDiagram__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicFunctionDiagram__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicFunctionDiagramAccess().getAlternatives_3()); }
	(rule__LogicFunctionDiagram__Alternatives_3)*
	{ after(grammarAccess.getLogicFunctionDiagramAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicFunctionDiagram__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicFunctionDiagram__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicFunctionDiagram__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicFunctionDiagramAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getLogicFunctionDiagramAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleDeclaration__Group__0__Impl
	rule__RuleDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleDeclarationAccess().getRuleKeyword_0()); }
	'rule'
	{ after(grammarAccess.getRuleDeclarationAccess().getRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleDeclaration__Group__1__Impl
	rule__RuleDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleDeclarationAccess().getNameAssignment_1()); }
	(rule__RuleDeclaration__NameAssignment_1)?
	{ after(grammarAccess.getRuleDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleDeclaration__Group__2__Impl
	rule__RuleDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleDeclarationAccess().getColonEqualsSignKeyword_2()); }
	':='
	{ after(grammarAccess.getRuleDeclarationAccess().getColonEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleDeclaration__Group__3__Impl
	rule__RuleDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleDeclarationAccess().getGroup_3()); }
	(rule__RuleDeclaration__Group_3__0)?
	{ after(grammarAccess.getRuleDeclarationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleDeclarationAccess().getAlternatives_4()); }
	(rule__RuleDeclaration__Alternatives_4)
	{ after(grammarAccess.getRuleDeclarationAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleDeclaration__Group_3__0__Impl
	rule__RuleDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleDeclarationAccess().getRaisesAssignment_3_0()); }
	(rule__RuleDeclaration__RaisesAssignment_3_0)
	{ after(grammarAccess.getRuleDeclarationAccess().getRaisesAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleDeclarationAccess().getLessThanSignHyphenMinusKeyword_3_1()); }
	'<-'
	{ after(grammarAccess.getRuleDeclarationAccess().getLessThanSignHyphenMinusKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AND__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AND__Group__0__Impl
	rule__AND__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getANDAccess().getAndKeyword_0()); }
	'and'
	{ after(grammarAccess.getANDAccess().getAndKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AND__Group__1__Impl
	rule__AND__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getANDAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getANDAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AND__Group__2__Impl
	rule__AND__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getANDAccess().getAlternatives_2()); }
	(rule__AND__Alternatives_2)
	{ after(grammarAccess.getANDAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AND__Group__3__Impl
	rule__AND__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getANDAccess().getGroup_3()); }
	(rule__AND__Group_3__0)*
	{ after(grammarAccess.getANDAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AND__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getANDAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getANDAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AND__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AND__Group_3__0__Impl
	rule__AND__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getANDAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getANDAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AND__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getANDAccess().getAlternatives_3_1()); }
	(rule__AND__Alternatives_3_1)
	{ after(grammarAccess.getANDAccess().getAlternatives_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OR__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OR__Group__0__Impl
	rule__OR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getORAccess().getOrKeyword_0()); }
	'or'
	{ after(grammarAccess.getORAccess().getOrKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OR__Group__1__Impl
	rule__OR__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getORAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getORAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OR__Group__2__Impl
	rule__OR__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getORAccess().getAlternatives_2()); }
	(rule__OR__Alternatives_2)
	{ after(grammarAccess.getORAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OR__Group__3__Impl
	rule__OR__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getORAccess().getGroup_3()); }
	(rule__OR__Group_3__0)*
	{ after(grammarAccess.getORAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OR__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getORAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getORAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OR__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OR__Group_3__0__Impl
	rule__OR__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getORAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getORAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OR__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getORAccess().getAlternatives_3_1()); }
	(rule__OR__Alternatives_3_1)
	{ after(grammarAccess.getORAccess().getAlternatives_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XOR__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XOR__Group__0__Impl
	rule__XOR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XOR__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXORAccess().getXorKeyword_0()); }
	'xor'
	{ after(grammarAccess.getXORAccess().getXorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XOR__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XOR__Group__1__Impl
	rule__XOR__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XOR__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXORAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getXORAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XOR__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XOR__Group__2__Impl
	rule__XOR__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XOR__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXORAccess().getAlternatives_2()); }
	(rule__XOR__Alternatives_2)
	{ after(grammarAccess.getXORAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XOR__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XOR__Group__3__Impl
	rule__XOR__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XOR__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXORAccess().getGroup_3()); }
	(rule__XOR__Group_3__0)*
	{ after(grammarAccess.getXORAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XOR__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XOR__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOR__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXORAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getXORAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XOR__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XOR__Group_3__0__Impl
	rule__XOR__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XOR__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXORAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getXORAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XOR__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XOR__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOR__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXORAccess().getAlternatives_3_1()); }
	(rule__XOR__Alternatives_3_1)
	{ after(grammarAccess.getXORAccess().getAlternatives_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NOT__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NOT__Group__0__Impl
	rule__NOT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NOT__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNOTAccess().getNotKeyword_0()); }
	'not'
	{ after(grammarAccess.getNOTAccess().getNotKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NOT__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NOT__Group__1__Impl
	rule__NOT__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NOT__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNOTAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getNOTAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NOT__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NOT__Group__2__Impl
	rule__NOT__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NOT__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNOTAccess().getAlternatives_2()); }
	(rule__NOT__Alternatives_2)
	{ after(grammarAccess.getNOTAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NOT__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NOT__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NOT__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNOTAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getNOTAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group__0__Impl
	rule__Interface__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getInterfaceKeyword_0()); }
	'interface'
	{ after(grammarAccess.getInterfaceAccess().getInterfaceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group__1__Impl
	rule__Interface__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getNameAssignment_1()); }
	(rule__Interface__NameAssignment_1)
	{ after(grammarAccess.getInterfaceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group__2__Impl
	rule__Interface__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getInterfaceAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group__3__Impl
	rule__Interface__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getEventsAssignment_3()); }
	(rule__Interface__EventsAssignment_3)*
	{ after(grammarAccess.getInterfaceAccess().getEventsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getInterfaceAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventDeclaration__Group__0__Impl
	rule__EventDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventDeclarationAccess().getDirectionAssignment_0()); }
	(rule__EventDeclaration__DirectionAssignment_0)
	{ after(grammarAccess.getEventDeclarationAccess().getDirectionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventDeclaration__Group__1__Impl
	rule__EventDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventDeclarationAccess().getExtraValueTypeAssignment_1()); }
	(rule__EventDeclaration__ExtraValueTypeAssignment_1)?
	{ after(grammarAccess.getEventDeclarationAccess().getExtraValueTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventDeclarationAccess().getNameAssignment_2()); }
	(rule__EventDeclaration__NameAssignment_2)
	{ after(grammarAccess.getEventDeclarationAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group__0__Impl
	rule__Predicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getIncomeKeyword_0()); }
	'income'
	{ after(grammarAccess.getPredicateAccess().getIncomeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getListensAssignment_1()); }
	(rule__Predicate__ListensAssignment_1)
	{ after(grammarAccess.getPredicateAccess().getListensAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicFunctionDiagram__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicFunctionDiagramAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLogicFunctionDiagramAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicFunctionDiagram__RuleAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicFunctionDiagramAccess().getRuleRuleDeclarationParserRuleCall_3_0_0()); }
		ruleRuleDeclaration
		{ after(grammarAccess.getLogicFunctionDiagramAccess().getRuleRuleDeclarationParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicFunctionDiagram__InterfacesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicFunctionDiagramAccess().getInterfacesInterfaceParserRuleCall_3_1_0()); }
		ruleInterface
		{ after(grammarAccess.getLogicFunctionDiagramAccess().getInterfacesInterfaceParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRuleDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__RaisesAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleDeclarationAccess().getRaisesEventCrossReference_3_0_0()); }
		(
			{ before(grammarAccess.getRuleDeclarationAccess().getRaisesEventQualifiedNameParserRuleCall_3_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getRuleDeclarationAccess().getRaisesEventQualifiedNameParserRuleCall_3_0_0_1()); }
		)
		{ after(grammarAccess.getRuleDeclarationAccess().getRaisesEventCrossReference_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__ExpressionAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleDeclarationAccess().getExpressionANDParserRuleCall_4_0_0()); }
		ruleAND
		{ after(grammarAccess.getRuleDeclarationAccess().getExpressionANDParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__ExpressionAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleDeclarationAccess().getExpressionORParserRuleCall_4_1_0()); }
		ruleOR
		{ after(grammarAccess.getRuleDeclarationAccess().getExpressionORParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__ExpressionAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleDeclarationAccess().getExpressionXORParserRuleCall_4_2_0()); }
		ruleXOR
		{ after(grammarAccess.getRuleDeclarationAccess().getExpressionXORParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__ExpressionAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleDeclarationAccess().getExpressionNOTParserRuleCall_4_3_0()); }
		ruleNOT
		{ after(grammarAccess.getRuleDeclarationAccess().getExpressionNOTParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__ExpressionAssignment_4_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleDeclarationAccess().getExpressionPredicateListenParserRuleCall_4_4_0()); }
		rulePredicateListen
		{ after(grammarAccess.getRuleDeclarationAccess().getExpressionPredicateListenParserRuleCall_4_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__ExpressionAssignment_4_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleDeclarationAccess().getExpressionRuleListenParserRuleCall_4_5_0()); }
		ruleRuleListen
		{ after(grammarAccess.getRuleDeclarationAccess().getExpressionRuleListenParserRuleCall_4_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__ArgumentsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getANDAccess().getArgumentsANDParserRuleCall_2_0_0()); }
		ruleAND
		{ after(grammarAccess.getANDAccess().getArgumentsANDParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__ArgumentsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getANDAccess().getArgumentsORParserRuleCall_2_1_0()); }
		ruleOR
		{ after(grammarAccess.getANDAccess().getArgumentsORParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__ArgumentsAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getANDAccess().getArgumentsXORParserRuleCall_2_2_0()); }
		ruleXOR
		{ after(grammarAccess.getANDAccess().getArgumentsXORParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__ArgumentsAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getANDAccess().getArgumentsNOTParserRuleCall_2_3_0()); }
		ruleNOT
		{ after(grammarAccess.getANDAccess().getArgumentsNOTParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__ArgumentsAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getANDAccess().getArgumentsPredicateListenParserRuleCall_2_4_0()); }
		rulePredicateListen
		{ after(grammarAccess.getANDAccess().getArgumentsPredicateListenParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__ArgumentsAssignment_2_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getANDAccess().getArgumentsRuleListenParserRuleCall_2_5_0()); }
		ruleRuleListen
		{ after(grammarAccess.getANDAccess().getArgumentsRuleListenParserRuleCall_2_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__ArgumentsAssignment_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getANDAccess().getArgumentsANDParserRuleCall_3_1_0_0()); }
		ruleAND
		{ after(grammarAccess.getANDAccess().getArgumentsANDParserRuleCall_3_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__ArgumentsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getANDAccess().getArgumentsORParserRuleCall_3_1_1_0()); }
		ruleOR
		{ after(grammarAccess.getANDAccess().getArgumentsORParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__ArgumentsAssignment_3_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getANDAccess().getArgumentsXORParserRuleCall_3_1_2_0()); }
		ruleXOR
		{ after(grammarAccess.getANDAccess().getArgumentsXORParserRuleCall_3_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__ArgumentsAssignment_3_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getANDAccess().getArgumentsNOTParserRuleCall_3_1_3_0()); }
		ruleNOT
		{ after(grammarAccess.getANDAccess().getArgumentsNOTParserRuleCall_3_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__ArgumentsAssignment_3_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getANDAccess().getArgumentsPredicateListenParserRuleCall_3_1_4_0()); }
		rulePredicateListen
		{ after(grammarAccess.getANDAccess().getArgumentsPredicateListenParserRuleCall_3_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__ArgumentsAssignment_3_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getANDAccess().getArgumentsRuleListenParserRuleCall_3_1_5_0()); }
		ruleRuleListen
		{ after(grammarAccess.getANDAccess().getArgumentsRuleListenParserRuleCall_3_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__ArgumentsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getORAccess().getArgumentsANDParserRuleCall_2_0_0()); }
		ruleAND
		{ after(grammarAccess.getORAccess().getArgumentsANDParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__ArgumentsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getORAccess().getArgumentsORParserRuleCall_2_1_0()); }
		ruleOR
		{ after(grammarAccess.getORAccess().getArgumentsORParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__ArgumentsAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getORAccess().getArgumentsXORParserRuleCall_2_2_0()); }
		ruleXOR
		{ after(grammarAccess.getORAccess().getArgumentsXORParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__ArgumentsAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getORAccess().getArgumentsNOTParserRuleCall_2_3_0()); }
		ruleNOT
		{ after(grammarAccess.getORAccess().getArgumentsNOTParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__ArgumentsAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getORAccess().getArgumentsPredicateListenParserRuleCall_2_4_0()); }
		rulePredicateListen
		{ after(grammarAccess.getORAccess().getArgumentsPredicateListenParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__ArgumentsAssignment_2_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getORAccess().getArgumentsRuleListenParserRuleCall_2_5_0()); }
		ruleRuleListen
		{ after(grammarAccess.getORAccess().getArgumentsRuleListenParserRuleCall_2_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__ArgumentsAssignment_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getORAccess().getArgumentsANDParserRuleCall_3_1_0_0()); }
		ruleAND
		{ after(grammarAccess.getORAccess().getArgumentsANDParserRuleCall_3_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__ArgumentsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getORAccess().getArgumentsORParserRuleCall_3_1_1_0()); }
		ruleOR
		{ after(grammarAccess.getORAccess().getArgumentsORParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__ArgumentsAssignment_3_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getORAccess().getArgumentsXORParserRuleCall_3_1_2_0()); }
		ruleXOR
		{ after(grammarAccess.getORAccess().getArgumentsXORParserRuleCall_3_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__ArgumentsAssignment_3_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getORAccess().getArgumentsNOTParserRuleCall_3_1_3_0()); }
		ruleNOT
		{ after(grammarAccess.getORAccess().getArgumentsNOTParserRuleCall_3_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__ArgumentsAssignment_3_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getORAccess().getArgumentsPredicateListenParserRuleCall_3_1_4_0()); }
		rulePredicateListen
		{ after(grammarAccess.getORAccess().getArgumentsPredicateListenParserRuleCall_3_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__ArgumentsAssignment_3_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getORAccess().getArgumentsRuleListenParserRuleCall_3_1_5_0()); }
		ruleRuleListen
		{ after(grammarAccess.getORAccess().getArgumentsRuleListenParserRuleCall_3_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XOR__ArgumentsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXORAccess().getArgumentsANDParserRuleCall_2_0_0()); }
		ruleAND
		{ after(grammarAccess.getXORAccess().getArgumentsANDParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XOR__ArgumentsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXORAccess().getArgumentsORParserRuleCall_2_1_0()); }
		ruleOR
		{ after(grammarAccess.getXORAccess().getArgumentsORParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XOR__ArgumentsAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXORAccess().getArgumentsXORParserRuleCall_2_2_0()); }
		ruleXOR
		{ after(grammarAccess.getXORAccess().getArgumentsXORParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XOR__ArgumentsAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXORAccess().getArgumentsNOTParserRuleCall_2_3_0()); }
		ruleNOT
		{ after(grammarAccess.getXORAccess().getArgumentsNOTParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XOR__ArgumentsAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXORAccess().getArgumentsPredicateListenParserRuleCall_2_4_0()); }
		rulePredicateListen
		{ after(grammarAccess.getXORAccess().getArgumentsPredicateListenParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XOR__ArgumentsAssignment_2_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXORAccess().getArgumentsRuleListenParserRuleCall_2_5_0()); }
		ruleRuleListen
		{ after(grammarAccess.getXORAccess().getArgumentsRuleListenParserRuleCall_2_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XOR__ArgumentsAssignment_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXORAccess().getArgumentsANDParserRuleCall_3_1_0_0()); }
		ruleAND
		{ after(grammarAccess.getXORAccess().getArgumentsANDParserRuleCall_3_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XOR__ArgumentsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXORAccess().getArgumentsORParserRuleCall_3_1_1_0()); }
		ruleOR
		{ after(grammarAccess.getXORAccess().getArgumentsORParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XOR__ArgumentsAssignment_3_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXORAccess().getArgumentsXORParserRuleCall_3_1_2_0()); }
		ruleXOR
		{ after(grammarAccess.getXORAccess().getArgumentsXORParserRuleCall_3_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XOR__ArgumentsAssignment_3_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXORAccess().getArgumentsNOTParserRuleCall_3_1_3_0()); }
		ruleNOT
		{ after(grammarAccess.getXORAccess().getArgumentsNOTParserRuleCall_3_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XOR__ArgumentsAssignment_3_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXORAccess().getArgumentsPredicateListenParserRuleCall_3_1_4_0()); }
		rulePredicateListen
		{ after(grammarAccess.getXORAccess().getArgumentsPredicateListenParserRuleCall_3_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XOR__ArgumentsAssignment_3_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXORAccess().getArgumentsRuleListenParserRuleCall_3_1_5_0()); }
		ruleRuleListen
		{ after(grammarAccess.getXORAccess().getArgumentsRuleListenParserRuleCall_3_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NOT__ArgumentAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNOTAccess().getArgumentANDParserRuleCall_2_0_0()); }
		ruleAND
		{ after(grammarAccess.getNOTAccess().getArgumentANDParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NOT__ArgumentAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNOTAccess().getArgumentORParserRuleCall_2_1_0()); }
		ruleOR
		{ after(grammarAccess.getNOTAccess().getArgumentORParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NOT__ArgumentAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNOTAccess().getArgumentXORParserRuleCall_2_2_0()); }
		ruleXOR
		{ after(grammarAccess.getNOTAccess().getArgumentXORParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NOT__ArgumentAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNOTAccess().getArgumentNOTParserRuleCall_2_3_0()); }
		ruleNOT
		{ after(grammarAccess.getNOTAccess().getArgumentNOTParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NOT__ArgumentAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNOTAccess().getArgumentPredicateListenParserRuleCall_2_4_0()); }
		rulePredicateListen
		{ after(grammarAccess.getNOTAccess().getArgumentPredicateListenParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NOT__ArgumentAssignment_2_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNOTAccess().getArgumentRuleListenParserRuleCall_2_5_0()); }
		ruleRuleListen
		{ after(grammarAccess.getNOTAccess().getArgumentRuleListenParserRuleCall_2_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateListen__ListensAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateListenAccess().getListensPredicateParserRuleCall_0()); }
		rulePredicate
		{ after(grammarAccess.getPredicateListenAccess().getListensPredicateParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleListen__ListensAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleListenAccess().getListensRuleCrossReference_0()); }
		(
			{ before(grammarAccess.getRuleListenAccess().getListensRuleIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRuleListenAccess().getListensRuleIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getRuleListenAccess().getListensRuleCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getInterfaceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__EventsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceAccess().getEventsEventDeclarationParserRuleCall_3_0()); }
		ruleEventDeclaration
		{ after(grammarAccess.getInterfaceAccess().getEventsEventDeclarationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__DirectionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventDeclarationAccess().getDirectionEventDirectionEnumRuleCall_0_0()); }
		ruleEventDirection
		{ after(grammarAccess.getEventDeclarationAccess().getDirectionEventDirectionEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__ExtraValueTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventDeclarationAccess().getExtraValueTypeValueTypeEnumRuleCall_1_0()); }
		ruleValueType
		{ after(grammarAccess.getEventDeclarationAccess().getExtraValueTypeValueTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getEventDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__ListensAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getListensEventCrossReference_1_0()); }
		(
			{ before(grammarAccess.getPredicateAccess().getListensEventQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getPredicateAccess().getListensEventQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getPredicateAccess().getListensEventCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
